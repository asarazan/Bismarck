/*
 * Copyright (C) 2018 Touchlab, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "org.jetbrains.kotlin.multiplatform"
apply plugin: 'kotlinx-serialization'

group = GROUP
version = VERSION_NAME

def ideaActive = System.getProperty('idea.active') == 'true'

kotlin {
    jvm()
    if (ideaActive) {
        println("Configuring single iosx64 target")
        iosX64("ios") {
            binaries {
                framework {
                    freeCompilerArgs += "-Xobjc-generics"
                }
            }
        }
    } else {
        println("Configuring unified ios target")
        ios() {
            binaries {
                framework {
                    freeCompilerArgs += "-Xobjc-generics"
                }
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin("stdlib-common")
                api project(":bismarck")
                api "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$SERIALIZATION_VERSION"
            }
        }

        commonTest {
            dependencies {
                implementation kotlin("test-common")
                implementation kotlin("test-annotations-common")
            }
        }

        jvmMain {
            dependsOn commonMain
            dependencies {
                implementation kotlin("stdlib-jdk8")
                api "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$SERIALIZATION_VERSION"
            }
        }
        jvmTest {
            dependsOn commonTest
            dependencies {
                implementation kotlin("test")
                implementation kotlin("test-junit")
            }
        }

        iosMain {
            dependsOn commonMain
            dependencies {
                api "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$SERIALIZATION_VERSION"
            }
        }

        iosTest {}
    }
}

configurations {
    compileClasspath
}

apply from: "${rootDir}/gradle/gradle-mvn-mpp-push.gradle"
